buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.0.1'
}

jib {
    from {
        image = 'openjdk:alpine'
    }
    extraDirectory {
        permissions = [
                '/entrypoint.sh': '755'
        ]
    }
    to {
        image = 'docker-registry.local:5000/spring-boot-demo'
        tags = ['latest']
    }
    container {
        entrypoint = ["./entrypoint.sh"]
        format = 'OCI'
    }

    allowInsecureRegistries true
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'spring-boot-project-gradle'
    version = '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    annotationProcessor("org.projectlombok:lombok:1.16.20")
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly("org.projectlombok:lombok:1.16.20")
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.postgresql:postgresql')
    testImplementation("junit:junit")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

